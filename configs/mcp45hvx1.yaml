esphome:
  name: mcp45hvx1

external_components:
  - source: github://pzich/esphome@mcp45hvx1
    refresh: 0min
    components: [mcp45hvx1]

esp32:
  variant: esp32s3
  board: adafruit_feather_esp32s3
  framework:
    type: arduino

logger:
  # level: DEBUG
  level: VERY_VERBOSE
  logs:
    api.connection: NONE
    api.service: NONE
    esp32.preferences: NONE
    json: NONE
    mdns: NONE
    scheduler: NONE
  baud_rate: 115200

api:
  reboot_timeout: 0s

ota:
  - platform: esphome

wifi:
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_password
  fast_connect: true

web_server:
  version: 3

i2c:
  id: bus
  sda: GPIO11
  scl: GPIO12
  scan: true

mcp45hvx1:
  id: mcp
  model: "MCP45HV31"

button:
  - platform: template
    name: Dump Config
    on_press:
      - lambda: |-
          id(bus)->dump_config();
          id(mcp)->dump_config();
  - platform: template
    name: Read TCON
    on_press:
      - lambda: |-
          uint8_t v = id(mcp)->readTCON();
          ESP_LOGI("mcp45", "TCON = %X", v);
  - platform: template
    name: Read Wiper
    on_press:
      - lambda: |-
          uint8_t v = id(mcp)->readWiper();
          ESP_LOGI("mcp45", "Wiper = %d", v);

number:
  - platform: template
    name: Wiper
    min_value: 0
    max_value: 255
    step: 1
    optimistic: true
    set_action:
      - lambda: |-
          id(mcp)->writeWiper((uint8_t)x);

switch:
  - platform: template
    name: R0HW
    optimistic: true
    restore_mode: ALWAYS_ON
    turn_on_action:
      - lambda: |-
          id(mcp)->writeTCON_R0HW(true);
    turn_off_action:
      - lambda: |-
          id(mcp)->writeTCON_R0HW(false);
  - platform: template
    name: R0A
    optimistic: true
    restore_mode: ALWAYS_ON
    turn_on_action:
      - lambda: |-
          id(mcp)->writeTCON_R0A(true);
    turn_off_action:
      - lambda: |-
          id(mcp)->writeTCON_R0A(false);
  - platform: template
    name: R0W
    optimistic: true
    restore_mode: ALWAYS_ON
    turn_on_action:
      - lambda: |-
          id(mcp)->writeTCON_R0W(true);
    turn_off_action:
      - lambda: |-
          id(mcp)->writeTCON_R0W(false);
  - platform: template
    name: R0B
    optimistic: true
    restore_mode: ALWAYS_ON
    turn_on_action:
      - lambda: |-
          id(mcp)->writeTCON_R0B(true);
    turn_off_action:
      - lambda: |-
          id(mcp)->writeTCON_R0B(false);
